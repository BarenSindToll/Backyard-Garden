{"version":3,"file":"react-use-image.cjs.production.min.js","sources":["../src/index.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\n// interface Window extends EventTarget {\ndeclare interface Window extends EventTarget {\n  readonly window: Window & typeof globalThis;\n  Image: {\n    prototype: HTMLImageElement;\n    new (): HTMLImageElement;\n  };\n}\n\ninterface SizedTarget {\n  width: number;\n  height: number;\n}\n\n// type WindowProps = React.HTMLProps<HTMLElement>;\n\n// interface WindowComponent extends React.StatelessComponent<WindowProps> {\n//     (props: WindowProps): React.ReactElement<HTMLElement>;\n// }\n\nconst useImage = (src: string) => {\n  const ready = useRef(true);\n  const [loaded, setLoaded] = useState(false);\n  const [failed, setFailed] = useState(false);\n  const [dimensions, setDimensions] = useState({\n    width: 0,\n    height: 0,\n  });\n\n  useEffect(() => {\n    const win: Window = window;\n    const { Image } = win;\n\n    if (!src || !Image) {\n      return;\n    }\n\n    const image = new Image();\n\n    function isSizedTarget(t: any): t is SizedTarget {\n      return t && t.width !== undefined && t.height !== undefined;\n    }\n\n    image.onload = event => {\n      if (ready.current) {\n        if (isSizedTarget(event.target)) {\n          const { width, height } = event.target;\n          setLoaded(true);\n          setDimensions({ width, height });\n        }\n      }\n    };\n\n    image.onerror = () => {\n      if (ready.current) {\n        setLoaded(false);\n        setFailed(true);\n      }\n    };\n\n    image.src = src;\n  }, [src]);\n\n  useEffect(() => {\n    return () => {\n      ready.current = false;\n    };\n  }, []);\n\n  return { loaded, failed, dimensions };\n};\n\nexport default useImage;\n"],"names":["src","ready","useRef","useState","loaded","setLoaded","failed","setFailed","width","height","dimensions","setDimensions","useEffect","Image","window","image","onload","event","current","t","target","undefined","onerror"],"mappings":"2GAsBiB,SAACA,OACVC,EAAQC,UAAO,KACOC,YAAS,GAA9BC,OAAQC,SACaF,YAAS,GAA9BG,OAAQC,SACqBJ,WAAS,CAC3CK,MAAO,EACPC,OAAQ,IAFHC,OAAYC,cAKnBC,aAAU,eAEAC,EADYC,OACZD,SAEHb,GAAQa,OAIPE,EAAQ,IAAIF,EAMlBE,EAAMC,OAAS,SAAAC,MACThB,EAAMiB,UALWC,EAMDF,EAAMG,cALFC,IAAZF,EAAEX,YAAoCa,IAAbF,EAAEV,OAKJ,OACLQ,EAAMG,OAAxBZ,IAAAA,MAAOC,IAAAA,OACfJ,GAAU,GACVM,EAAc,CAAEH,MAAAA,EAAOC,OAAAA,QATNU,GAcvBJ,EAAMO,QAAU,WACVrB,EAAMiB,UACRb,GAAU,GACVE,GAAU,KAIdQ,EAAMf,IAAMA,KACX,CAACA,IAEJY,aAAU,kBACD,WACLX,EAAMiB,SAAU,KAEjB,IAEI,CAAEd,OAAAA,EAAQE,OAAAA,EAAQI,WAAAA"}