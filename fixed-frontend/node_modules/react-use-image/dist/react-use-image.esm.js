import { useRef, useState, useEffect } from 'react';

// interface WindowComponent extends React.StatelessComponent<WindowProps> {
//     (props: WindowProps): React.ReactElement<HTMLElement>;
// }

var useImage = function useImage(src) {
  var ready = useRef(true);

  var _useState = useState(false),
      loaded = _useState[0],
      setLoaded = _useState[1];

  var _useState2 = useState(false),
      failed = _useState2[0],
      setFailed = _useState2[1];

  var _useState3 = useState({
    width: 0,
    height: 0
  }),
      dimensions = _useState3[0],
      setDimensions = _useState3[1];

  useEffect(function () {
    var win = window;
    var Image = win.Image;

    if (!src || !Image) {
      return;
    }

    var image = new Image();

    function isSizedTarget(t) {
      return t && t.width !== undefined && t.height !== undefined;
    }

    image.onload = function (event) {
      if (ready.current) {
        if (isSizedTarget(event.target)) {
          var _event$target = event.target,
              width = _event$target.width,
              height = _event$target.height;
          setLoaded(true);
          setDimensions({
            width: width,
            height: height
          });
        }
      }
    };

    image.onerror = function () {
      if (ready.current) {
        setLoaded(false);
        setFailed(true);
      }
    };

    image.src = src;
  }, [src]);
  useEffect(function () {
    return function () {
      ready.current = false;
    };
  }, []);
  return {
    loaded: loaded,
    failed: failed,
    dimensions: dimensions
  };
};

export default useImage;
//# sourceMappingURL=react-use-image.esm.js.map
